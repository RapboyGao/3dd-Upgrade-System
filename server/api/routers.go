/*
 * Nuxt Backend
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package api

import (
	"net/http"

	"github.com/gin-gonic/gin"
)

// Route is the information for every URI.
type Route struct {
	// Name is the name of this Route.
	Name		string
	// Method is the string for the HTTP method. ex) GET, POST etc..
	Method		string
	// Pattern is the pattern of the URI.
	Pattern	 	string
	// HandlerFunc is the handler function of this route.
	HandlerFunc	gin.HandlerFunc
}

// NewRouter returns a new router.
func NewRouter(handleFunctions ApiHandleFunctions) *gin.Engine {
	router := gin.Default()
	for _, route := range getRoutes(handleFunctions) {
		if route.HandlerFunc == nil {
			route.HandlerFunc = DefaultHandleFunc
		}
		switch route.Method {
		case http.MethodGet:
			router.GET(route.Pattern, route.HandlerFunc)
		case http.MethodPost:
			router.POST(route.Pattern, route.HandlerFunc)
		case http.MethodPut:
			router.PUT(route.Pattern, route.HandlerFunc)
		case http.MethodPatch:
			router.PATCH(route.Pattern, route.HandlerFunc)
		case http.MethodDelete:
			router.DELETE(route.Pattern, route.HandlerFunc)
		}
	}

	return router
}

// Default handler for not yet implemented routes
func DefaultHandleFunc(c *gin.Context) {
	c.String(http.StatusNotImplemented, "501 not implemented")
}

type ApiHandleFunctions struct {

	// Routes for the DefaultAPI part of the API
	DefaultAPI DefaultAPI
}

func getRoutes(handleFunctions ApiHandleFunctions) []Route {
	return []Route{
	
		{
			"AircraftExperiencesOverrideDelete",
			http.MethodDelete,
			"/api-go/aircraftExperiencesOverride",
			handleFunctions.DefaultAPI.AircraftExperiencesOverrideDelete,
		},
		{
			"AircraftExperiencesOverrideGet",
			http.MethodGet,
			"/api-go/aircraftExperiencesOverride",
			handleFunctions.DefaultAPI.AircraftExperiencesOverrideGet,
		},
		{
			"AircraftExperiencesOverridePost",
			http.MethodPost,
			"/api-go/aircraftExperiencesOverride",
			handleFunctions.DefaultAPI.AircraftExperiencesOverridePost,
		},
		{
			"CheckRideDetailDelete",
			http.MethodDelete,
			"/api-go/checkRideDetail",
			handleFunctions.DefaultAPI.CheckRideDetailDelete,
		},
		{
			"CheckRideDetailGet",
			http.MethodGet,
			"/api-go/checkRideDetail",
			handleFunctions.DefaultAPI.CheckRideDetailGet,
		},
		{
			"CheckRideDetailPost",
			http.MethodPost,
			"/api-go/checkRideDetail",
			handleFunctions.DefaultAPI.CheckRideDetailPost,
		},
		{
			"LevelOverrideDelete",
			http.MethodDelete,
			"/api-go/levelOverride",
			handleFunctions.DefaultAPI.LevelOverrideDelete,
		},
		{
			"LevelOverrideGet",
			http.MethodGet,
			"/api-go/levelOverride",
			handleFunctions.DefaultAPI.LevelOverrideGet,
		},
		{
			"LevelOverridePost",
			http.MethodPost,
			"/api-go/levelOverride",
			handleFunctions.DefaultAPI.LevelOverridePost,
		},
		{
			"MainSheetGet",
			http.MethodGet,
			"/api-go/mainSheet",
			handleFunctions.DefaultAPI.MainSheetGet,
		},
		{
			"PilotInfoGet",
			http.MethodGet,
			"/api-go/pilotInfo",
			handleFunctions.DefaultAPI.PilotInfoGet,
		},
		{
			"UploadExcelPost",
			http.MethodPost,
			"/api-go/uploadExcel",
			handleFunctions.DefaultAPI.UploadExcelPost,
		},
	}
}
